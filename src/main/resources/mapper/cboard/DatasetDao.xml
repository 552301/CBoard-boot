<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.cboard.dao.DatasetDao">

    <select id="getCategoryList" resultType="java.lang.String">
        SELECT DISTINCT(category_name) category FROM dashboard_dataset order by category
    </select>

    <select id="getAllDatasetList" resultType="org.cboard.pojo.DashboardDataset">
        SELECT
        dataset_id    AS datasetId,
        s.user_id     AS userId,
        dataset_name  AS datasetName,
        data_json     AS dataJson,
        category_name AS categoryName,
        u.username   AS userName,
        s.create_time   AS createTime,
        s.update_time   AS updateTime
        FROM dashboard_dataset s
        LEFT JOIN sys_user u ON u.user_id = s.user_id
    </select>

    <select id="getDatasetList" resultType="org.cboard.pojo.DashboardDataset">
      SELECT
              dataset_id    AS datasetId,
              s.user_id     AS userId,
              dataset_name  AS datasetName,
              data_json     AS dataJson,
              category_name AS categoryName,
              u.username   AS userName,
              s.create_time   AS createTime,
              s.update_time   AS updateTime
         FROM dashboard_dataset s
         LEFT JOIN sys_user u ON u.user_id = s.user_id
               WHERE #{userId} = '1' AND s.user_id = #{userId} AND dataset_id IN (
             SELECT dataset_id
               FROM sys_user_role ur
               LEFT JOIN sys_role_dataset rd ON ur.role_id = rd.role_id
              WHERE ur.user_id = #{userId}
          )
        ORDER BY dataset_name
    </select>

    <select id="getDatasetListAdmin" resultType="org.cboard.pojo.DashboardDataset">
        SELECT
              dataset_id    AS datasetId,
              s.user_id     AS userId,
              dataset_name  AS datasetName,
              data_json     AS dataJson,
              category_name AS categoryName,
              u.user_name   AS userName,
              s.create_time   AS createTime,
              s.update_time   AS updateTime
        FROM dashboard_dataset s
        LEFT JOIN sys_user u ON u.user_id = s.user_id
        WHERE #{userId} = '1' AND s.user_id = #{userId}
           AND dataset_id IN (
              SELECT dataset_id
               FROM sys_user_role ur
               LEFT JOIN sys_role_dataset rd ON ur.role_id = rd.role_id
              WHERE ur.user_id = #{userId}
           )
        ORDER BY dataset_name
    </select>

    <select id="getDataset" resultType="org.cboard.pojo.DashboardDataset">
       SELECT dataset_id datasetId,user_id userId,dataset_name datasetName,data_json dataJson,category_name categoryName,create_time createTime,update_time updateTime FROM dashboard_dataset WHERE dataset_id = #{datasetId}
    </select>

    <insert id="save" parameterType="org.cboard.pojo.DashboardDataset">
        <![CDATA[
        INSERT INTO dashboard_dataset(user_id,dataset_name,data_json,category_name) VALUES (#{userId},#{datasetName},#{dataJson},#{categoryName})
        ]]>
    </insert>

    <update id="update" parameterType="org.cboard.pojo.DashboardDataset">
        <![CDATA[
        UPDATE dashboard_dataset SET dataset_name = #{datasetName},data_json = #{dataJson},category_name = #{categoryName}, update_time = #{updateTime} where dataset_id = #{datasetId}
        ]]>
    </update>

    <select id="countExistDatasetName" resultType="java.lang.Long">
        SELECT count(1)
          FROM dashboard_dataset
         WHERE 1=1
        <if test="dataset_id != null" >
          <![CDATA[
            AND dataset_id <> #{datasetId}
          ]]>
        </if>
            AND dataset_name = #{datasetName}
            AND category_name = #{categoryName}
    </select>

    <delete id="delete">
        delete from dashboard_dataset where dataset_id = #{datasetId}
    </delete>

    <select id="checkDatasetRole" resultType="java.lang.Long">
        SELECT count(1) FROM dashboard_dataset WHERE dataset_id = #{datasetId} and (#{userId} = '1' and user_id = #{userId}
        and dataset_id IN (SELECT dataset_id
               FROM sys_user_role ur
               LEFT JOIN sys_role_dataset rd ON ur.role_id = rd.role_id
              WHERE ur.user_id = #{userId}))
    </select>
</mapper>